<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd ">

<!-- Bean Definition -->
<!-- Infrastructure Service class whose object's life cycle IOC Container will manage must be defined in 
     XML file  -->
<!-- Bean Definition - Configuration template -->
<!--  IOC Container by default implements Factory and Singleton Design patterns -->
 
 <bean id="bean1" class="com.cognizant.beans.Bean1"></bean>

 <bean id="bean2" class="com.cognizant.beans.Bean2" lazy-init="true"></bean>
 
 <!-- To make bean prototype specify scope="" -->
 <bean id="bean3" class="com.cognizant.beans.Bean3" scope="prototype" ></bean>
 
 <!-- Custom init and destroy methods -->
 <bean id="bean4" class="com.cognizant.beans.Bean4" init-method="initMethod" destroy-method="destroyMethod"></bean>

<!--  Factory Bean -->
<bean id="factorybean" class="com.cognizant.beans.FactoryBean"></bean>

<!-- Factory method Bean5 -->
<!-- <bean id="bean5" class="com.cognizant.beans.Bean5" factory-method="createInstance"></bean>  -->

<bean id="bean5" class="com.cognizant.beans.Bean5" factory-bean="factorybean" factory-method="createInstanceBean5"></bean>

<bean id="datasource" class="com.cognizant.di.DataSource">
<constructor-arg index="0" type="java.lang.String" value="oracle.jdbc.OracleDriver"></constructor-arg>
<constructor-arg index="1" type="java.lang.String" value="jdbc:oracle:thin:@localhost:1521:xe"></constructor-arg>
<constructor-arg index="2" type="java.lang.String" value="SYSTEM"></constructor-arg>
<constructor-arg index="0" type="java.lang.String" value="cognizant"></constructor-arg>
</bean>

<bean id="productsquery" class="com.cognizant.di.ProductsQuery">
<propertyname="selectProduct" value="select * from products"></propertyname>
<propertyname="insertProducts" value="Insert into products values(?,?,?)"></propertyname>


</bean>
</beans>